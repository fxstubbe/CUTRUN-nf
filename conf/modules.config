/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // withName: 'FASTQC' {
    //    // ext.args = '--quiet'
    //     publishDir = [
    //         path: { "${params.outdir}/01_QC/fastqc" },
    //         mode: params.publish_dir_mode,
    //         saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    //     ]
    // }

    // ####################################################################################
    // QC modules
    // ####################################################################################
    
    withName: 'TRIMGALORE' {
            publishDir = [
                path: { "${params.outdir}/01_QC/trimgalore" },
                mode: "${params.publish_dir_mode}",
                pattern: '*.report.txt'
            ]
    }

      withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/01_QC/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // ####################################################################################
    // Aligner modules 
    // ####################################################################################

        withName: 'BOWTIE2_TARGET_ALIGN' {
            ext.args   = { params.end_to_end ? '--end-to-end --very-sensitive --no-mixed --no-discordant --phred33 --minins 10 --maxins 700 --dovetail' : '--local --very-sensitive --no-mixed --no-discordant --phred33 --minins 10 --maxins 700 --dovetail' }
            publishDir = [
                [
                    path: { "${params.outdir}/02_alignment/${params.genome}/log" },
                    mode: "${params.publish_dir_mode}",
                    pattern: '*.log'
                ],
                [
                    path: { "${params.outdir}/02_alignment/${params.genome}/BAM" },
                    mode: "${params.publish_dir_mode}",
                    pattern: '*.bam', 
                    enabled: ( params.save_bam_unsorted)//|| (!params.run_read_filter && !params.run_mark_dups && !params.run_remove_dups) )
                ],

                [
                    path: { "${params.outdir}/02_alignment/${params.genome}/unmapped" },
                    mode: "${params.publish_dir_mode}",
                    pattern: '*.fastq.gz',
                    enabled: params.save_unmapped_reads
                ]
            ]
        }
        withName: 'BOWTIE2_SPIKEIN_ALIGN' {
            ext.args   = { params.end_to_end ? '--end-to-end --very-sensitive --no-mixed --no-discordant --phred33 --minins 10 --maxins 700 --dovetail' : '--local --very-sensitive --no-mixed --no-discordant --phred33 --minins 10 --maxins 700 --dovetail' }
            publishDir = [
                [
                    path: { "${params.outdir}/02_alignment/${params.spike_genome}/log" },
                    mode: "${params.publish_dir_mode}",
                    pattern: '*.log'
                ],
                
                [
                    path: { "${params.outdir}/02_alignment/${params.spike_genome}/BAM/" },
                    mode: "${params.publish_dir_mode}",
                    pattern: '*.bam',
                    enabled: ( params.save_bam_pikein_aligned )//|| (!params.run_read_filter && !params.run_mark_dups && !params.run_remove_dups) )
                ]
            ]
        }

        // ####################################################################################
        // Parameters for Subworflow samtools_sort_stats_samtools
        // #############################################################################################

            withName: 'SAMTOOLS_SORT' {
            ext.prefix = { "${meta.id}.${params.genome}.sorted" }
            publishDir = [
                path: { "${params.outdir}/02_alignment/${params.genome}/BAM" },
                mode: "${params.publish_dir_mode}",
                pattern: "*.bam",
                //enabled: ( params.save_align_intermed || (!params.run_read_filter && !params.run_mark_dups && !params.run_remove_dups) )
                enabled: ( params.save_bam_sorted)            
            ]
        }
            withName: 'SAMTOOLS_INDEX' {
            ext.prefix = { "${meta.id}.${params.genome}.sorted" }
            publishDir = [
                path: { "${params.outdir}/02_alignment/${params.genome}/BAM" },
                mode: "${params.publish_dir_mode}",
                pattern: "*.bai",
                //enabled: ( params.save_align_intermed || (!params.run_read_filter && !params.run_mark_dups && !params.run_remove_dups) )
                enabled: ( params.save_bam_sorted)            
            ]
        }

            withName: 'SAMTOOLS_STATS' {
            ext.prefix = { "${meta.id}.${params.genome}.sorted" }
            publishDir = [
                path: { "${params.outdir}/02_alignment/${params.genome}/log" },
                mode: "${params.publish_dir_mode}",
                pattern: "*.stats",
                enabled: ( params.save_bam_sorted_stats)            
            ]
        }
            withName: 'SAMTOOLS_FLAGSTAT' {
            ext.prefix = { "${meta.id}.${params.genome}.sorted" }
            publishDir = [
                path: { "${params.outdir}/02_alignment/${params.genome}/log" },
                mode: "${params.publish_dir_mode}",
                pattern: "*.flagstat",
                enabled: ( params.save_bam_sorted_stats)            
            ]
        }
            withName: 'SAMTOOLS_IDXSTATS' {
            ext.prefix = { "${meta.id}.${params.genome}.sorted" }
            publishDir = [
                path: { "${params.outdir}/02_alignment/${params.genome}/log" },
                mode: "${params.publish_dir_mode}",
                pattern: "*.idxstats",
                enabled: ( params.save_bam_sorted_stats)            
            ]
        }
        // ####################################################################################
        // PICARD : Remove duplicates  
        // --> Should only be done on CONTROL samples
        // One may also do it if lots of duplicates are expected
        // Indeed, in CR, many reads will have the same start position, so removing duplicates will remove a lot of reads
        // #############################################################################################

        withName: 'PICARD_MARKDUPLICATES' {
        ext.args = { params.remove_duplicates ? '--REMOVE_DUPLICATES false' : '' }
        ext.prefix = { "${meta.id}.${params.genome}.picard" }

        publishDir = [
            [
                path: { "${params.outdir}/03_markduplicates/${params.genome}/BAM" },
                mode: "${params.publish_dir_mode}",
                pattern: '*.bam',
                enabled: true
            ],
            [
                path: { "${params.outdir}/03_markduplicates/${params.genome}/metrics" },
                mode: "${params.publish_dir_mode}",
                pattern: '*.metrics.txt',
                enabled: true
            ]
        ]
    }
        withName: 'PICARD_ADDORREPLACEREADGROUPS' {
        ext.args = { params.remove_duplicates ? '--RGID 4 --RGLB lib1 --RGPL illumina  --RGPU unit1 --RGSM 20' : '' }
        ext.prefix = { "${meta.id}.${params.genome}.marked" }
        }

}

